-- The questions below were answered for this final SQL project.
--The data set used represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

-- 1. Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country <> 'USA'
;


-- 2. Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE Country = 'Brazil'
;


-- 3. Find the Invoices of customers who are from Brazil. 
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName, c.LastName, i.invoiceid, i.invoicedate, i.billingcountry
FROM chinook.invoices i
JOIN chinook.customers c
ON i.customerid = c.customerid
WHERE i.billingcountry = 'Brazil'
GROUP BY i.invoiceid
;


-- 4. Show the Employees who are Sales Agents.
SELECT * 
FROM chinook.employees
WHERE Title = 'Sales Support Agent'
;


--5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices
;


-- 6. Provide a query that shows the invoices associated with each sales agent. 
--The resulting table should include the Sales Agent's full name.
SELECT e.FirstName, e.LastName, i.InvoiceId
FROM chinook.employees e
LEFT JOIN chinook.customers c
ON c.SupportRepId = e.EmployeeId
LEFT JOIN chinook.invoices i
ON i.CustomerId = c.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY i.InvoiceId
ORDER BY e.FirstName
;


-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM chinook.customers c
LEFT JOIN chinook.invoices i
ON i.CustomerID = c.CustomerID
Left JOIN chinook.employees e
ON e.employeeid = c.supportrepid
GROUP BY i.InvoiceId
;


-- 8. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%'
;


-- 9. What are the total sales for 2009?
SELECT SUM(total)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%'
;


-- 10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, i.InvoiceLineID
FROM chinook.tracks t
LEFT JOIN chinook.invoice_items i
ON i.TrackId = t.TrackID
WHERE i.InvoiceLineID <> 'NULL'
ORDER BY i.InvoiceLineID
;


--11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT t.Name as Track, ar.Name as Artist, i.InvoiceLineID
FROM chinook.tracks t
JOIN chinook.invoice_items i
ON i.TrackID = t.TrackID
JOIN chinook.albums a
ON a.AlbumId = t.AlbumId
JOIN chinook.artists ar
ON a.ArtistID = ar.ArtistID
WHERE i.InvoiceLineID <> 'Null'
ORDER BY i.InvoiceLineID
;


-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name as Track, a.Title as Album_Name, m.Name as Media_Type, g.Name as Genre
FROM chinook.tracks t
JOIN chinook.albums a
ON a.AlbumID = t.AlbumID
JOIN chinook.media_types m
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres g
ON g.GenreId = t.GenreId
;


-- 13. Show the total sales made by each sales agent.
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as Total_Sales
FROM chinook.invoices i
JOIN chinook.customers c
ON c.CustomerId = i.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
GROUP BY e.FirstName
;


-- 14. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as Total_Sales
FROM chinook.employees e
JOIN chinook.customers c
ON c.SupportRepId = e.EmployeeId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
AND i.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total), 2) desc
LIMIT 1
;


-- 15. Which genre brings in the most sales?
SELECT g.Name, ROUND(SUM(i.Total), 2) as Total_Sales
FROM chinook.genres g
JOIN chinook.tracks t
ON t.GenreID = g.GenreId
JOIN chinook.invoice_items it
ON it.TrackId = t.TrackId
JOIN chinook.invoices i
ON i.invoiceId = it.invoiceId
GROUP BY g.Name
ORDER BY ROUND(SUM(i.Total), 2) desc
LIMIT 1
;


-- 16. How many playlists are there?
SELECT COUNT(DISTINCT PlaylistID)
FROM chinook.playlists
;


-- 17. What is the average track length?
SELECT ROUND(AVG(milliseconds), 2) as Avg_Track_Length
FROM chinook.tracks
;
